name: python-demo

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      JF_URL: ${{ secrets.JF_URL }}
      JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}
      MODULE_NAME: "jfrog-python-example"
      SERVER_ID: "rtsaas"
      REPO: "auth-python-virtual"
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Setup JFrog CLI 
        uses: jfrog/setup-jfrog-cli@v3.4.0
      - name: JFrog CLI config
        run: jf c add $SERVER_ID --url=$JF_URL --access-token=$JF_ACCESS_TOKEN --interactive=false
      - name: Ping JFrog CLI
        run: jf rt ping --server-id=$SERVER_ID
      - name: Run Python build and publish
        run: |
          jf pipc --server-id-resolve=$SERVER_ID --repo-resolve=$REPO
          # Build the python project
          jf pip install -r requirements.txt --module=$MODULE_NAME --build-name $BUILD_NAME --build-number $BUILD_NUMBER
      - name: Publish build
        run: |
           # Collect and store environment variables in the build-info
           jfrog rt bce
           # Collect and store VCS details in the build-info
           jfrog rt bag
           # Publish the build-info to Artifactory
           jfrog rt bp
           # Scan the published build-info with Xray
           jfrog rt bs --build-name $BUILD_NAME --build-number $BUILD_NUMBER
        if: always()
